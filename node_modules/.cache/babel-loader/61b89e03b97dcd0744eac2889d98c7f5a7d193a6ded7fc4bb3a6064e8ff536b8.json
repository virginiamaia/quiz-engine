{"ast":null,"code":"var _jsxFileName = \"C:\\\\_programas\\\\quiz-engine\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const handleAnswer = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      setAnswers(prevAnswers => ({\n        ...prevAnswers,\n        [name]: {\n          ...(prevAnswers[name] || {}),\n          [value]: checked\n        }\n      }));\n    } else {\n      setAnswers({\n        ...answers,\n        [name]: value\n      });\n    }\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questionsData.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const calculateProgress = () => {\n    return (currentQuestionIndex + 1) / questionsData.length * 100;\n  };\n  const currentQuestion = questionsData[currentQuestionIndex];\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Quiz completo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${calculateProgress()}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestion.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), currentQuestion.type === 'one-choice' && currentQuestion.options && currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${currentQuestion.id}`,\n            value: option,\n            onChange: handleAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)), currentQuestion.type === 'multiple-choice' && currentQuestion.options && currentQuestion.options.map((option, index) => {\n        var _answers;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `question-${currentQuestion.id}`,\n              value: index,\n              checked: ((_answers = answers[`question-${currentQuestion.id}`]) === null || _answers === void 0 ? void 0 : _answers[index]) || false,\n              onChange: handleAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      }), currentQuestion.type === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `question-${currentQuestion.id}`,\n          onChange: handleAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestionIndex >= questionsData.length - 1,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"ILatPGejwxoTHpjxrCZSBw++8gE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","questionsData","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","handleAnswer","e","name","value","type","checked","target","prevAnswers","handleNext","length","calculateProgress","currentQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","title","options","map","option","index","id","onChange","_answers","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/_programas/quiz-engine/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport questionsData from '../data/questions.json';\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  const handleAnswer = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === 'checkbox') {\r\n      setAnswers(prevAnswers => ({\r\n        ...prevAnswers,\r\n        [name]: {\r\n          ...(prevAnswers[name] || {}),\r\n          [value]: checked,\r\n        },\r\n      }));\r\n    } else {\r\n      setAnswers({ ...answers, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questionsData.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    return ((currentQuestionIndex + 1) / questionsData.length) * 100;\r\n  };\r\n\r\n  const currentQuestion = questionsData[currentQuestionIndex];\r\n\r\n  if (!currentQuestion) {\r\n    return <div>Quiz completo!</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress-bar\" style={{ width: `${calculateProgress()}%` }}></div>\r\n      <div className=\"question-container\">\r\n        <h2>{currentQuestion.title}</h2>\r\n        {currentQuestion.type === 'one-choice' && currentQuestion.options && (\r\n          currentQuestion.options.map((option, index) => (\r\n            <div key={index}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion.id}`}\r\n                  value={option}\r\n                  onChange={handleAnswer}\r\n                />\r\n                {option}\r\n              </label>\r\n            </div>\r\n          ))\r\n        )}\r\n        {currentQuestion.type === 'multiple-choice' && currentQuestion.options && (\r\n          currentQuestion.options.map((option, index) => (\r\n            <div key={index}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={`question-${currentQuestion.id}`}\r\n                  value={index}\r\n                  checked={answers[`question-${currentQuestion.id}`]?.[index] || false}\r\n                  onChange={handleAnswer}\r\n                />\r\n                {option}\r\n              </label>\r\n            </div>\r\n          ))\r\n        )}\r\n        {currentQuestion.type === 'input' && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name={`question-${currentQuestion.id}`}\r\n              onChange={handleAnswer}\r\n            />\r\n          </div>\r\n        )}\r\n        <button onClick={handleNext} disabled={currentQuestionIndex >= questionsData.length - 1}>\r\n          Pr√≥xima\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}