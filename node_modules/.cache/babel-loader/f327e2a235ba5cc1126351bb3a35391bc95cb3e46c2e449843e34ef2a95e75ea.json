{"ast":null,"code":"var _jsxFileName = \"C:\\\\_programas\\\\quiz-engine\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from '../data/questions.json';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [fontSize, setFontSize] = useState(16);\n  const [isComplete, setIsComplete] = useState(false);\n  const handleAnswer = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      setAnswers(prevAnswers => ({\n        ...prevAnswers,\n        [name]: {\n          ...(prevAnswers[name] || {}),\n          [value]: checked\n        }\n      }));\n    } else {\n      setAnswers(prevAnswers => ({\n        ...prevAnswers,\n        [name]: value\n      }));\n    }\n  };\n  const handleNext = () => {\n    const currentQuestion = questionsData[currentQuestionIndex];\n    if (currentQuestion.type === 'one-choice') {\n      const selectedAnswerIndex = answers[`question-${currentQuestion.id}`];\n      if (selectedAnswerIndex !== undefined) {\n        const isCorrect = parseInt(selectedAnswerIndex, 10) === currentQuestion.correctOption;\n        alert(isCorrect ? 'Resposta correta!' : `Resposta incorreta. A resposta correta é: ${currentQuestion.options[currentQuestion.correctOption]}`);\n      } else {\n        alert('Nenhuma opção selecionada.');\n      }\n    }\n    if (currentQuestion.type === 'multiple-choice') {\n      const selectedAnswers = answers[`question-${currentQuestion.id}`] || {};\n      const correctAnswers = new Set(currentQuestion.correctOptions);\n      const userAnswers = new Set(Object.keys(selectedAnswers).filter(key => selectedAnswers[key] === true).map(Number));\n      const isCorrect = correctAnswers.size === userAnswers.size && [...correctAnswers].every(answer => userAnswers.has(answer));\n      alert(isCorrect ? 'Resposta correta!' : `Resposta incorreta. As respostas corretas são: ${currentQuestion.correctOptions.map(index => currentQuestion.options[index]).join(', ')}`);\n    }\n    if (currentQuestion.type === 'input') {\n      const userAnswer = answers[`question-${currentQuestion.id}`] || '';\n      const isCorrect = userAnswer.trim() === currentQuestion.correctAnswer.trim();\n      alert(isCorrect ? 'Resposta correta!' : `Resposta incorreta. A resposta correta é: ${currentQuestion.correctAnswer}`);\n    }\n    if (currentQuestionIndex < questionsData.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setIsComplete(true);\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setAnswers({});\n    setIsComplete(false);\n    setFontSize(16);\n  };\n  const calculateProgress = () => {\n    return (currentQuestionIndex + 1) / questionsData.length * 100;\n  };\n  const currentQuestion = questionsData[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${calculateProgress()}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFontSize(fontSize + 2),\n        children: \"Aumentar Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFontSize(fontSize - 2),\n        children: \"Diminuir Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      style: {\n        fontSize: `${fontSize}px`\n      },\n      children: isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Quiz completo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-button\",\n          onClick: handleRestart,\n          children: \"Recome\\xE7ar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: currentQuestion,\n          onAnswer: handleAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          children: currentQuestionIndex < questionsData.length - 1 ? 'Próxima' : 'Finalizar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"cJMSmzbWGLtoYySshejBPweSVKQ=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","questionsData","Question","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","fontSize","setFontSize","isComplete","setIsComplete","handleAnswer","e","name","value","type","checked","target","prevAnswers","handleNext","currentQuestion","selectedAnswerIndex","id","undefined","isCorrect","parseInt","correctOption","alert","options","selectedAnswers","correctAnswers","Set","correctOptions","userAnswers","Object","keys","filter","key","map","Number","size","every","answer","has","index","join","userAnswer","trim","correctAnswer","length","handleRestart","calculateProgress","children","className","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/_programas/quiz-engine/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport questionsData from '../data/questions.json';\r\nimport Question from './Question';\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  const handleAnswer = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === 'checkbox') {\r\n      setAnswers(prevAnswers => ({\r\n        ...prevAnswers,\r\n        [name]: {\r\n          ...(prevAnswers[name] || {}),\r\n          [value]: checked,\r\n        },\r\n      }));\r\n    } else {\r\n      setAnswers(prevAnswers => ({\r\n        ...prevAnswers,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const currentQuestion = questionsData[currentQuestionIndex];\r\n\r\n    if (currentQuestion.type === 'one-choice') {\r\n      const selectedAnswerIndex = answers[`question-${currentQuestion.id}`];\r\n      if (selectedAnswerIndex !== undefined) {\r\n        const isCorrect = parseInt(selectedAnswerIndex, 10) === currentQuestion.correctOption;\r\n        alert(isCorrect \r\n          ? 'Resposta correta!' \r\n          : `Resposta incorreta. A resposta correta é: ${currentQuestion.options[currentQuestion.correctOption]}`);\r\n      } else {\r\n        alert('Nenhuma opção selecionada.');\r\n      }\r\n    } \r\n    \r\n    if (currentQuestion.type === 'multiple-choice') {\r\n      const selectedAnswers = answers[`question-${currentQuestion.id}`] || {};\r\n      const correctAnswers = new Set(currentQuestion.correctOptions);\r\n      const userAnswers = new Set(Object.keys(selectedAnswers).filter(key => selectedAnswers[key] === true).map(Number));\r\n\r\n      const isCorrect = correctAnswers.size === userAnswers.size && [...correctAnswers].every(answer => userAnswers.has(answer));\r\n      alert(isCorrect \r\n        ? 'Resposta correta!' \r\n        : `Resposta incorreta. As respostas corretas são: ${currentQuestion.correctOptions.map(index => currentQuestion.options[index]).join(', ')}`);\r\n    }\r\n    \r\n    if (currentQuestion.type === 'input') {\r\n      const userAnswer = answers[`question-${currentQuestion.id}`] || '';\r\n      const isCorrect = userAnswer.trim() === currentQuestion.correctAnswer.trim();\r\n      alert(isCorrect \r\n        ? 'Resposta correta!' \r\n        : `Resposta incorreta. A resposta correta é: ${currentQuestion.correctAnswer}`);\r\n    }\r\n\r\n    if (currentQuestionIndex < questionsData.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setIsComplete(true); \r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setAnswers({});\r\n    setIsComplete(false); \r\n    setFontSize(16); \r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    return ((currentQuestionIndex + 1) / questionsData.length) * 100;\r\n  };\r\n\r\n  const currentQuestion = questionsData[currentQuestionIndex];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress-bar\" style={{ width: `${calculateProgress()}%` }}></div>\r\n      <div className=\"zoom-controls\">\r\n        <button onClick={() => setFontSize(fontSize + 2)}>Aumentar Zoom</button>\r\n        <button onClick={() => setFontSize(fontSize - 2)}>Diminuir Zoom</button>\r\n      </div>\r\n      <div className=\"question-container\" style={{ fontSize: `${fontSize}px` }}>\r\n        {isComplete ? (\r\n          <div>\r\n            <div>Quiz completo!</div>\r\n            <button className=\"restart-button\" onClick={handleRestart}>Recomeçar</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Question question={currentQuestion} onAnswer={handleAnswer} />\r\n            <button onClick={handleNext}>\r\n              {currentQuestionIndex < questionsData.length - 1 ? 'Próxima' : 'Finalizar'}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAE/C,IAAIF,IAAI,KAAK,UAAU,EAAE;MACvBT,UAAU,CAACY,WAAW,KAAK;QACzB,GAAGA,WAAW;QACd,CAACL,IAAI,GAAG;UACN,IAAIK,WAAW,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;UAC5B,CAACC,KAAK,GAAGE;QACX;MACF,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLV,UAAU,CAACY,WAAW,KAAK;QACzB,GAAGA,WAAW;QACd,CAACL,IAAI,GAAGC;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,eAAe,GAAGvB,aAAa,CAACM,oBAAoB,CAAC;IAE3D,IAAIiB,eAAe,CAACL,IAAI,KAAK,YAAY,EAAE;MACzC,MAAMM,mBAAmB,GAAGhB,OAAO,CAAC,YAAYe,eAAe,CAACE,EAAE,EAAE,CAAC;MACrE,IAAID,mBAAmB,KAAKE,SAAS,EAAE;QACrC,MAAMC,SAAS,GAAGC,QAAQ,CAACJ,mBAAmB,EAAE,EAAE,CAAC,KAAKD,eAAe,CAACM,aAAa;QACrFC,KAAK,CAACH,SAAS,GACX,mBAAmB,GACnB,6CAA6CJ,eAAe,CAACQ,OAAO,CAACR,eAAe,CAACM,aAAa,CAAC,EAAE,CAAC;MAC5G,CAAC,MAAM;QACLC,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF;IAEA,IAAIP,eAAe,CAACL,IAAI,KAAK,iBAAiB,EAAE;MAC9C,MAAMc,eAAe,GAAGxB,OAAO,CAAC,YAAYe,eAAe,CAACE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;MACvE,MAAMQ,cAAc,GAAG,IAAIC,GAAG,CAACX,eAAe,CAACY,cAAc,CAAC;MAC9D,MAAMC,WAAW,GAAG,IAAIF,GAAG,CAACG,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC,CAACO,MAAM,CAACC,GAAG,IAAIR,eAAe,CAACQ,GAAG,CAAC,KAAK,IAAI,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC;MAElH,MAAMf,SAAS,GAAGM,cAAc,CAACU,IAAI,KAAKP,WAAW,CAACO,IAAI,IAAI,CAAC,GAAGV,cAAc,CAAC,CAACW,KAAK,CAACC,MAAM,IAAIT,WAAW,CAACU,GAAG,CAACD,MAAM,CAAC,CAAC;MAC1Hf,KAAK,CAACH,SAAS,GACX,mBAAmB,GACnB,kDAAkDJ,eAAe,CAACY,cAAc,CAACM,GAAG,CAACM,KAAK,IAAIxB,eAAe,CAACQ,OAAO,CAACgB,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACjJ;IAEA,IAAIzB,eAAe,CAACL,IAAI,KAAK,OAAO,EAAE;MACpC,MAAM+B,UAAU,GAAGzC,OAAO,CAAC,YAAYe,eAAe,CAACE,EAAE,EAAE,CAAC,IAAI,EAAE;MAClE,MAAME,SAAS,GAAGsB,UAAU,CAACC,IAAI,CAAC,CAAC,KAAK3B,eAAe,CAAC4B,aAAa,CAACD,IAAI,CAAC,CAAC;MAC5EpB,KAAK,CAACH,SAAS,GACX,mBAAmB,GACnB,6CAA6CJ,eAAe,CAAC4B,aAAa,EAAE,CAAC;IACnF;IAEA,IAAI7C,oBAAoB,GAAGN,aAAa,CAACoD,MAAM,GAAG,CAAC,EAAE;MACnD7C,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACLO,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMwC,aAAa,GAAGA,CAAA,KAAM;IAC1B9C,uBAAuB,CAAC,CAAC,CAAC;IAC1BE,UAAU,CAAC,CAAC,CAAC,CAAC;IACdI,aAAa,CAAC,KAAK,CAAC;IACpBF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAM2C,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAQ,CAAChD,oBAAoB,GAAG,CAAC,IAAIN,aAAa,CAACoD,MAAM,GAAI,GAAG;EAClE,CAAC;EAED,MAAM7B,eAAe,GAAGvB,aAAa,CAACM,oBAAoB,CAAC;EAE3D,oBACEH,OAAA;IAAAoD,QAAA,gBACEpD,OAAA;MAAKqD,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAGJ,iBAAiB,CAAC,CAAC;MAAI;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjF3D,OAAA;MAAKqD,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BpD,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMpD,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAE;QAAA6C,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxE3D,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMpD,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAE;QAAA6C,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACN3D,OAAA;MAAKqD,SAAS,EAAC,oBAAoB;MAACC,KAAK,EAAE;QAAE/C,QAAQ,EAAE,GAAGA,QAAQ;MAAK,CAAE;MAAA6C,QAAA,EACtE3C,UAAU,gBACTT,OAAA;QAAAoD,QAAA,gBACEpD,OAAA;UAAAoD,QAAA,EAAK;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzB3D,OAAA;UAAQqD,SAAS,EAAC,gBAAgB;UAACO,OAAO,EAAEV,aAAc;UAAAE,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,gBAEN3D,OAAA;QAAAoD,QAAA,gBACEpD,OAAA,CAACF,QAAQ;UAAC+D,QAAQ,EAAEzC,eAAgB;UAAC0C,QAAQ,EAAEnD;QAAa;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D3D,OAAA;UAAQ4D,OAAO,EAAEzC,UAAW;UAAAiC,QAAA,EACzBjD,oBAAoB,GAAGN,aAAa,CAACoD,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzD,EAAA,CAvGID,IAAI;AAAA8D,EAAA,GAAJ9D,IAAI;AAyGV,eAAeA,IAAI;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}