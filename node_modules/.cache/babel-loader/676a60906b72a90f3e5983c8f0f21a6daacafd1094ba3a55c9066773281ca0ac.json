{"ast":null,"code":"var _jsxFileName = \"C:\\\\_programas\\\\quiz-engine\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport questionsData from '../data/questions.json';\nimport Question from './Question'; // Certifique-se de importar o componente Question\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const questionRef = useRef(null);\n  useEffect(() => {\n    if (questionRef.current) {\n      questionRef.current.focus();\n    }\n  }, [currentQuestionIndex]);\n  const handleAnswer = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      setAnswers(prevAnswers => ({\n        ...prevAnswers,\n        [name]: {\n          ...(prevAnswers[name] || {}),\n          [value]: checked\n        }\n      }));\n    } else {\n      setAnswers({\n        ...answers,\n        [name]: value\n      });\n    }\n  };\n  const handleNext = () => {\n    const currentQuestion = questionsData[currentQuestionIndex];\n    let isCorrect = false;\n    if (currentQuestion.type === 'one-choice') {\n      const selectedAnswer = answers[`question-${currentQuestion.id}`];\n      if (selectedAnswer) {\n        isCorrect = selectedAnswer === currentQuestion.options[currentQuestion.correctOption];\n        setErrorMessage(isCorrect ? 'Resposta correta!' : `Resposta incorreta. A resposta correta é: ${currentQuestion.options[currentQuestion.correctOption]}`);\n      } else {\n        setErrorMessage('Nenhuma opção selecionada.');\n      }\n    }\n    if (currentQuestion.type === 'multiple-choice') {\n      const selectedAnswers = answers[`question-${currentQuestion.id}`] || {};\n      const correctAnswers = new Set(currentQuestion.correctOptions);\n      const userAnswers = new Set(Object.keys(selectedAnswers).filter(key => selectedAnswers[key] === true).map(Number));\n      isCorrect = correctAnswers.size === userAnswers.size && [...correctAnswers].every(answer => userAnswers.has(answer));\n      setErrorMessage(isCorrect ? 'Resposta correta!' : `Resposta incorreta. As respostas corretas são: ${currentQuestion.correctOptions.map(index => currentQuestion.options[index]).join(', ')}`);\n    }\n    if (currentQuestion.type === 'input') {\n      const userAnswer = answers[`question-${currentQuestion.id}`] || '';\n      isCorrect = userAnswer.trim() === currentQuestion.correctAnswer.trim();\n      setErrorMessage(isCorrect ? 'Resposta correta!' : `Resposta incorreta. A resposta correta é: ${currentQuestion.correctAnswer}`);\n    }\n    if (currentQuestionIndex < questionsData.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const calculateProgress = () => {\n    return (currentQuestionIndex + 1) / questionsData.length * 100;\n  };\n  const currentQuestion = questionsData[currentQuestionIndex];\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Quiz completo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${calculateProgress()}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      ref: questionRef,\n      tabIndex: \"-1\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: currentQuestion,\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestionIndex >= questionsData.length - 1,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-live\": \"assertive\",\n        role: \"alert\",\n        children: errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"cBHaefgbKz+V0M2rzjY8ZxAbrrU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useRef","useEffect","questionsData","Question","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","errorMessage","setErrorMessage","questionRef","current","focus","handleAnswer","e","name","value","type","checked","target","prevAnswers","handleNext","currentQuestion","isCorrect","selectedAnswer","id","options","correctOption","selectedAnswers","correctAnswers","Set","correctOptions","userAnswers","Object","keys","filter","key","map","Number","size","every","answer","has","index","join","userAnswer","trim","correctAnswer","length","calculateProgress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","ref","tabIndex","question","onAnswer","onClick","disabled","role","_c","$RefreshReg$"],"sources":["C:/_programas/quiz-engine/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport questionsData from '../data/questions.json';\r\nimport Question from './Question'; // Certifique-se de importar o componente Question\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const questionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (questionRef.current) {\r\n      questionRef.current.focus();\r\n    }\r\n  }, [currentQuestionIndex]);\r\n\r\n  const handleAnswer = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === 'checkbox') {\r\n      setAnswers(prevAnswers => ({\r\n        ...prevAnswers,\r\n        [name]: {\r\n          ...(prevAnswers[name] || {}),\r\n          [value]: checked,\r\n        },\r\n      }));\r\n    } else {\r\n      setAnswers({ ...answers, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const currentQuestion = questionsData[currentQuestionIndex];\r\n    let isCorrect = false;\r\n\r\n    if (currentQuestion.type === 'one-choice') {\r\n      const selectedAnswer = answers[`question-${currentQuestion.id}`];\r\n      if (selectedAnswer) {\r\n        isCorrect = selectedAnswer === currentQuestion.options[currentQuestion.correctOption];\r\n        setErrorMessage(isCorrect \r\n          ? 'Resposta correta!' \r\n          : `Resposta incorreta. A resposta correta é: ${currentQuestion.options[currentQuestion.correctOption]}`);\r\n      } else {\r\n        setErrorMessage('Nenhuma opção selecionada.');\r\n      }\r\n    } \r\n    \r\n    if (currentQuestion.type === 'multiple-choice') {\r\n      const selectedAnswers = answers[`question-${currentQuestion.id}`] || {};\r\n      const correctAnswers = new Set(currentQuestion.correctOptions);\r\n      const userAnswers = new Set(Object.keys(selectedAnswers).filter(key => selectedAnswers[key] === true).map(Number));\r\n      \r\n      isCorrect = correctAnswers.size === userAnswers.size && [...correctAnswers].every(answer => userAnswers.has(answer));\r\n      setErrorMessage(isCorrect \r\n        ? 'Resposta correta!' \r\n        : `Resposta incorreta. As respostas corretas são: ${currentQuestion.correctOptions.map(index => currentQuestion.options[index]).join(', ')}`);\r\n    }\r\n    \r\n    if (currentQuestion.type === 'input') {\r\n      const userAnswer = answers[`question-${currentQuestion.id}`] || '';\r\n      isCorrect = userAnswer.trim() === currentQuestion.correctAnswer.trim();\r\n      setErrorMessage(isCorrect \r\n        ? 'Resposta correta!' \r\n        : `Resposta incorreta. A resposta correta é: ${currentQuestion.correctAnswer}`);\r\n    }\r\n    \r\n    if (currentQuestionIndex < questionsData.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    return ((currentQuestionIndex + 1) / questionsData.length) * 100;\r\n  };\r\n\r\n  const currentQuestion = questionsData[currentQuestionIndex];\r\n\r\n  if (!currentQuestion) {\r\n    return <div>Quiz completo!</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress-bar\" style={{ width: `${calculateProgress()}%` }}></div>\r\n      <div className=\"question-container\" ref={questionRef} tabIndex=\"-1\">\r\n        <Question question={currentQuestion} onAnswer={handleAnswer} />\r\n        <button onClick={handleNext} disabled={currentQuestionIndex >= questionsData.length - 1}>\r\n          Próxima\r\n        </button>\r\n        <div aria-live=\"assertive\" role=\"alert\">\r\n          {errorMessage && <span>{errorMessage}</span>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}