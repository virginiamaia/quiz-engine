{"ast":null,"code":"var _jsxFileName = \"C:\\\\_programas\\\\quiz-engine\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const handleAnswer = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnswers({\n      ...answers,\n      [name]: value\n    });\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questionsData.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const calculateProgress = () => {\n    return (currentQuestionIndex + 1) / questionsData.length * 100;\n  };\n  const currentQuestion = questionsData[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${calculateProgress()}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), currentQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestion.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), currentQuestion.options && currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: currentQuestion.type === 'one-choice' ? 'radio' : 'checkbox',\n            name: `question-${currentQuestion.id}`,\n            value: option,\n            onChange: handleAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestionIndex >= questionsData.length - 1,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Quiz completo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"ILatPGejwxoTHpjxrCZSBw++8gE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","questionsData","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","handleAnswer","e","name","value","target","handleNext","length","calculateProgress","currentQuestion","children","className","style","width","fileName","_jsxFileName","lineNumber","columnNumber","title","options","map","option","index","type","id","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/_programas/quiz-engine/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport questionsData from '../data/questions.json';\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  const handleAnswer = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswers({ ...answers, [name]: value });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questionsData.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    return ((currentQuestionIndex + 1) / questionsData.length) * 100;\r\n  };\r\n\r\n  const currentQuestion = questionsData[currentQuestionIndex];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress-bar\" style={{ width: `${calculateProgress()}%` }}></div>\r\n      {currentQuestion ? (\r\n        <div className=\"question-container\">\r\n          <h2>{currentQuestion.title}</h2>\r\n          {currentQuestion.options && currentQuestion.options.map((option, index) => (\r\n            <div key={index}>\r\n              <label>\r\n                <input\r\n                  type={currentQuestion.type === 'one-choice' ? 'radio' : 'checkbox'}\r\n                  name={`question-${currentQuestion.id}`}\r\n                  value={option}\r\n                  onChange={handleAnswer}\r\n                />\r\n                {option}\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleNext} disabled={currentQuestionIndex >= questionsData.length - 1}>\r\n            Pr√≥xima\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>Quiz completo!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}